name: Salesforce Deployment

on:
  push:
    branches: [ main ]
    paths:
      - 'force-app/**'
      - 'destructiveChanges/**'

concurrency:
  group: 'salesforce-deployment'
  cancel-in-progress: false     

permissions:
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v42
        with:
          files: |
            destructiveChanges/destructiveChangesPre.xml
            destructiveChanges/destructiveChangesPost.xml
            force-app/**

      - name: Install sfdx-git-delta plugin
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          echo "Installing sfdx-git-delta plugin..."
          echo y | npx sf plugins install sfdx-git-delta

      - name: Generate delta package
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          # Get the previous commit hash
          PREVIOUS_COMMIT=$(git rev-parse HEAD^)
          echo "Comparing changes with previous commit: $PREVIOUS_COMMIT"
          
          npx sf sgd source delta \
            --to HEAD \
            --from $PREVIOUS_COMMIT \
            --output . \
            --source-dir force-app \
            --generate-delta

          if [ ! -f "package/package.xml" ]; then
            echo "No package.xml generated - no metadata changes detected"
            exit 0
          fi
          echo "Generated package.xml contents:"
          cat package/package.xml

      - name: Authenticate to Salesforce
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          echo "${{ secrets.SFDX_AUTH_URL }}" > ./authfile
          npx sf org login sfdx-url -f ./authfile -a deployment-org
          rm ./authfile

      - name: Deploy to org
        if: steps.changed-files.outputs.any_changed == 'true'
        run: |
          echo "Starting deployment..."
          npx sf project deploy start \
            --manifest package/package.xml \
            --pre-destructive-changes destructiveChanges/destructiveChangesPre.xml \
            --post-destructive-changes destructiveChanges/destructiveChangesPost.xml \
            --target-org deployment-org \
            --json | tee deploy_result.json

          # Check deployment status
          if [ $? -ne 0 ]; then
            echo "Deployment failed!"
            exit 1
          fi 